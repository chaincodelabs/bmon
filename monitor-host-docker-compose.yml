# Based upon https://grafana.com/docs/grafana-cloud/quickstart/docker-compose-linux/
# and https://www.elastic.co/guide/en/elastic-stack-get-started/current/get-started-docker.html
version: '2'

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana:/var/lib/grafana
    network_mode: "host"
    # publishes on port 3000

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom:/prometheus
    ports:
      - 9090:9090
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml

  loki:
    image: grafana/loki:2.4.0
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki
      - loki:/var/lib/loki
    command: -config.file=/etc/loki/loki-config.yaml

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - elastic

  kib01:
    image: docker.elastic.co/kibana/kibana:7.16.1
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200"]'
    networks:
      - elastic

  logstash:
    image: docker.elastic.co/logstash/logstash:7.16.2
    container_name: logstash
    restart: unless-stopped
    volumes:
      - ./logstash/logstash.conf:/logstash.conf
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
    network_mode: "host"
    command: "logstash -f /logstash.conf"

networks:
  elastic:
    driver: bridge


volumes:
  prom:
  loki:
  grafana:
  esdata01:
  esdata02:
