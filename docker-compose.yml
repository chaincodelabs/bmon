# Services that run on the single, centralized bmon server instance.
#
# Environment is injected from the .env file, which is generated by
# `./infra/bmon_infra/config.py`.

version: '3.5'

x-service-config: &service
  environment: &env
    BMON_DEBUG:
    BMON_HOSTS_FILE:
    BMON_HOSTNAME:
    DB_HOST:
    DB_PASSWORD:
    BITCOIN_RPC_PASSWORD:
    BITCOIN_RPC_PORT:
    BITCOIN_RPC_USER:
    BMON_REDIS_SERVER_URL:
    BMON_REDIS_HOST:
    PYTHONUNBUFFERED: 1

services:

  db:
    profiles: ["server"]
    user: "${UID}"
    image: docker.io/library/postgres:14-bullseye
    environment:
      POSTGRES_DB: bmon
      POSTGRES_USER: bmon
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ${ENV_ROOT}/postgres/data:/var/lib/postgresql/data
      - /etc/passwd:/etc/passwd:ro
    ports:
      - 5432:5432

  redis:
    profiles: ["server"]
    image: docker.io/library/redis
    ports:
      - 6379:6379

  grafana:
    profiles: ["server"]
    image: docker.io/grafana/grafana-enterprise
    user: "${UID}"
    volumes:
      - ${ENV_ROOT}/grafana/etc:/etc/grafana
      - ${ENV_ROOT}/grafana/var:/var/lib/grafana
    links:
      - prom
      - alertman
      - loki
    ports:
      - 3000:3000

  loki:
    profiles: ["server"]
    image: docker.io/grafana/loki
    user: "${UID}"
    volumes:
      - ${ENV_ROOT}/loki:/loki
      - ${ENV_ROOT}/loki/etc:/etc/loki
    links:
      - alertman
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - 3100:3100

  prom:
    profiles: ["server"]
    image: docker.io/prom/prometheus
    user: "${UID}"
    volumes:
      - ${ENV_ROOT}/prom/etc:/etc/prometheus
      - ${ENV_ROOT}/prom/data:/prometheus
    links:
      - alertman
    ports:
      - 9090:9090

  alertman:
    profiles: ["server"]
    image: docker.io/prom/alertmanager
    user: "${UID}:1000"
    volumes:
      - ${ENV_ROOT}/alertman/config.yml:/etc/alertmanager/config.yml
      - ${ENV_ROOT}/alertman/data:/alertmanager
    command: --config.file=/etc/alertmanager/config.yml --storage.path=/alertmanager
    ports:
      - 9093:9093

  web: &web_config
    profiles: ["server"]
    image: web
    user: "${UID}"
    build:
      context: .
      dockerfile: ./docker/py.Dockerfile
    image: bmon-base-image
    environment:
      <<: *env
      RUN_DB_MIGRATIONS: 1
      WAIT_FOR: "${DB_HOST}:5432"
    ports:
      - 8080:8080
    volumes:
      - ./:/src
    links:
      - db
    command: ./manage.py runserver 0.0.0.0:8080

  shell:
    image: bmon-base-image
    profiles: ["ops"]
    environment:
      <<: *env
      WAIT_FOR: "${DB_HOST}:5432"
      IPYTHONDIR: /var/lib/ipython
    volumes:
      - ./:/src
      - ${ENV_ROOT}/ipython:/var/lib/ipython
    links:
      - db
    command: ./manage.py shell

  server-task-worker:
    profiles: ["server"]
    user: "${UID}"
    image: bmon-base-image
    environment:
      <<: *env
      WAIT_FOR: "${DB_HOST}:5432,${BMON_REDIS_HOST}:6379"
    volumes:
      - ./:/src
      - /home/james/.bitcoind/debug.log:/var/log/bitcoind.log
    links:
      - db
      - redis
    command: celery -A bmon.server_tasks worker --beat -l INFO

  bitcoind-exporter:
    profiles: ["bitcoind"]
    image: jvstein/bitcoin-prometheus-exporter:latest
    environment:
      <<: *env
      BITCOIN_RPC_HOST:
    links:
      - bitcoind
    ports:
      - 9332:9332

  bitcoind:
    profiles: ["bitcoind"]
    image: jamesob/bitcoind:${BITCOIN_DOCKER_TAG}
    user: "${UID}"
    volumes:
      - ${ENV_ROOT}/bitcoin/data:/bitcoin/data
      - ${ENV_ROOT}/bitcoin/data/bitcoin.conf:/bitcoin/bitcoin.conf
    command: bitcoind -datadir=/bitcoin/data ${BITCOIN_FLAGS}
    ports:
      - 8332:8332

  promtail:
    profiles: ["bitcoind"]
    image: docker.io/grafana/promtail
    user: "${UID}"
    environment:
      BMON_REDIS_LOCAL_URL: 
      BMON_REDIS_SERVER_URL: 
      WAIT_FOR: "${LOKI_HOST}:${LOKI_PORT}"
    volumes:
      - ${ENV_ROOT}/promtail:/etc/promtail
      - ${BITCOIN_DATA_PATH}:/bitcoin/data
    command: --config.file=/etc/promtail/config.yml
    links:
      - bitcoind

  redis-bitcoind:
    profiles: ["prod-bitcoind"]
    image: docker.io/library/redis
    ports:
      - 6379:6379

  bitcoind-task-worker:
    profiles: ["bitcoind"]
    user: "${UID}"
    build:
      context: .
      dockerfile: ./docker/py.Dockerfile
    image: bmon-base-image
    environment:
      <<: *env
      BMON_REDIS_LOCAL_URL: 
      WAIT_FOR: "${BMON_REDIS_HOST}:6379,${BMON_REDIS_LOCAL_HOST}:6379"
    volumes:
      - ./:/src
    # Can't have this as a dependency because of local dev.
    # links:
    #   - redis-bitcoind
    command: celery -A bmon.bitcoind_tasks worker -l INFO

  bitcoind-watcher:
    profiles: ["bitcoind"]
    user: "${UID}"
    image: bmon-base-image
    environment:
      <<: *env
      BMON_REDIS_LOCAL_URL:
      BMON_BITCOIND_LOG_PATH: /var/log/bitcoind.log
      WAIT_FOR: "${BMON_REDIS_HOST}:6379,${DB_HOST}:5432"
    volumes:
      - ./:/src
      - ${BITCOIN_DATA_PATH}/debug.log:/var/log/bitcoind.log
    links:
      - bitcoind-task-worker
    command: python manage.py watchlogs

  node-exporter:
    # only monitor this stuff in prod since its mountpoint needs are zealous.
    profiles: ["prod"]  
    image: prom/node-exporter:latest
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100:9100

  test:
    profiles: ["dev"]
    user: "${UID}"
    image: bmon-base-image
    environment:
      <<: *env
      RUN_DB_MIGRATIONS: 1
      DJANGO_SETTINGS_MODULE: bmon.settings_test
      BMON_REDIS_LOCAL_URL: "redis://redis:6379/11"
      BMON_REDIS_SERVER_URL: "redis://redis:6379/10"
      BMON_REDIS_HOST:
      BMON_REDIS_LOCAL_HOST:
    ports:
      - 8080:8080
    volumes:
      - ./:/src
    links:
      - db
      - bitcoind
    command: ./manage.py runserver 0.0.0.0:8080

volumes:
  db-data:
